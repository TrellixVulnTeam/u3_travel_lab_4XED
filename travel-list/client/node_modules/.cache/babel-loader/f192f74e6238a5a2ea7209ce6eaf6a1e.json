{"ast":null,"code":"var _jsxFileName = \"/Users/emily/ga_seir/unit3/labs/travel/u3_travel_lab/travel-list/client/src/components/Places.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { GetPlaces } from '../services/PlaceServices';\nimport { LoadPlaces } from '../store/actions/PlaceActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = _ref => {\n  let {\n    placeState\n  } = _ref;\n  return {\n    placeState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPlaces: () => dispatch(LoadPlaces())\n  };\n};\n\nconst Places = props => {\n  _s();\n\n  useEffect(() => {\n    props.fetchPlaces();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Travel Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), props.placeState.places.map(place => {\n      ;\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: place.image,\n          alt: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: place.decsription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, place.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Places, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Places;\nexport default connect(mapStateToProps, mapDispatchToProps)(Places);\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/emily/ga_seir/unit3/labs/travel/u3_travel_lab/travel-list/client/src/components/Places.js"],"names":["useEffect","connect","GetPlaces","LoadPlaces","mapStateToProps","placeState","mapDispatchToProps","dispatch","fetchPlaces","Places","props","places","map","place","name","image","decsription","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,UAAT,QAA2B,+BAA3B;;;AAEA,MAAMC,eAAe,GAAG,QAAoB;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAC1C,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,WAAW,EAAE,MAAMD,QAAQ,CAACJ,UAAU,EAAX;AADtB,GAAP;AAGD,CAJD;;AAMA,MAAMM,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxBV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACF,WAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,KAAK,CAACL,UAAN,CAAiBM,MAAjB,CAAwBC,GAAxB,CAA6BC,KAAD,IAAW;AACtC;;AAAC;AAAA;AAAA,gCACC;AAAA,oBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,GAAG,EAAED,KAAK,CAACE,KAAhB;AAAuB,UAAA,GAAG,EAAEF,KAAK,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA,oBAAID,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA,SAAUH,KAAK,CAACI,EAAhB;AAAA;AAAA;AAAA;AAAA;AAKF,KANA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD;;GAAMR,M;;KAAAA,M;AAmBN,eAAeR,OAAO,CAACG,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CG,MAA7C,CAAf","sourcesContent":["import { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { GetPlaces } from '../services/PlaceServices'\nimport { LoadPlaces } from '../store/actions/PlaceActions'\n\nconst mapStateToProps = ({ placeState }) => {\n  return { placeState }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPlaces: () => dispatch(LoadPlaces())\n  }\n}\n\nconst Places = (props) => {\n  useEffect(() => {\n    props.fetchPlaces()\n  }, [])\n\n  return (\n    <div>\n      <h2>Travel Blog</h2>\n      {props.placeState.places.map((place) => {\n        ;<div key={place.id}>\n          <h3>{place.name}</h3>\n          <img src={place.image} alt={place.name} />\n          <p>{place.decsription}</p>\n        </div>\n      })}\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Places)\n"]},"metadata":{},"sourceType":"module"}